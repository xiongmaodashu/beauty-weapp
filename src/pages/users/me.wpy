<style lang="less">
.page__bd {
  padding-bottom: 0px;
}
.weui-grids {
  border: 0;
}
.userinfo-header {
  background: url('https://img.yzcdn.cn/upload_files/2019/01/31/Fp3kIohim8ZiB1yLepoMMW8is_qY.png');
  padding: 30rpx 0;

  .avatar {
    border-radius: 50%;
    width: 135rpx;
    height: 135rpx;
  }

  .weui-cell__bd {
    padding-left: 30rpx;
  }
}

.account-overview {
  width: 95%;
  margin: 20rpx auto;
  background: #ffffff;
  border:1pxs solid #ffffff;
  border-radius: 10rpx;
  
  .weui-grid {
    padding: 20rpx;
    border: 0;
  }

  .account-title {
    text-align: center;
    padding-top: 15rpx;
    color: #777;
    font-size: 28rpx;

  }
  .account-value {
    font-size:34rpx;
    font-weight: bold;
  }
}

.action-list {
  width: 95%;
  margin: 20rpx auto;
  background: #ffffff;
  border:1pxs solid #ffffff;
  border-radius: 10rpx;

  .weui-cell {
    padding: 30rpx;
  }
  .weui-cell::before {
    border-top: 1px solid #e9e9e9;
  }
  .dot {
    width: 36rpx;
    height: 36rpx;
    border-radius: 50%;
    background: red;
    position: absolute;
    top: 12rpx;
    left: 150rpx;
    display: inline-block;
    color: #ffffff;
    text-align: center;
    font-size: 24rpx;
  }
}


</style>

<template>
  <view class="page">
    <view class="page__bd" >
      <view class="weui-cells weui-cells_after-title userinfo-header">
        <navigator class="weui-cell" wx:if="{{ user }}" url="/pages/users/edit">
          <view class="weui-cell__hd avatar-wrap">
            <image class="avatar" src="{{ user.avatar }}" style="width:100px;height:100px"/>
          </view>
          <view class="weui-cell__bd">
            <view>{{ user.nickname }}</view>
          </view>
          <view class="weui-cell__ft weui-cell__ft_in-access"></view>
        </navigator>
      </view>
    </view>
      <view class="page__bd">
        <view class="weui-grids account-overview">
            <repeat for="{{grids}}" key="id" index="index" item="grid">
                <navigator url="" class="weui-grid" hover-class="weui-grid_active">
                  <view class="weui-grid__label account-value">{{grid.value}}</view>
                    <view class="account-title">{{ grid.title }}</view>
                </navigator>
            </repeat>
        </view>
      </view>
      <view class="page__bd">
        <view class="action-list">
          <navigator class="weui-cell weui-cell_access" url="orders">
          <view class="weui-cell__bd" url="">
            <view class="weui-cell__bd">我的订单
              <view class="dot" wx:if="{{ user.unfinished_orders > 0 }}">{{ user.unfinished_orders }}</view>
            </view>
          </view>
          <view class="weui-cell__ft weui-cell__ft_in-access"></view>
        </navigator>
        <navigator class="weui-cell weui-cell_access" url="/pages/accounts/statement">
          <view class="weui-cell__bd" url="">
            <view class="weui-cell__bd">账户明细</view>
          </view>
          <view class="weui-cell__ft weui-cell__ft_in-access"></view>
        </navigator>
        <navigator class="weui-cell weui-cell_access" url="/pages/users/paycode">
          <view class="weui-cell__bd" url="">
            <view class="weui-cell__bd">会员支付</view>
          </view>
          <view class="weui-cell__ft weui-cell__ft_in-access"></view>
        </navigator>
        </view>
      </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class UserMe extends wepy.page {
    config = {
      navigationBarTitleText: '我的'
    }

    data = {
      user: null,
      grids: [
        {title: '余额', value: 0.00},
        {title: '积分', value: 0},
        {title: '优惠券', value: 0}
      ]
    }

    async getUserInfo() {
      let userResponse = await api.authRequest({
        url: 'user'
      })
      this.user = userResponse.data
      this.$$apply()
    }
    async onShow() {
      let accessToken = wepy.getStorageSync('access_token')

      if (accessToken) {
        this.user = await this.$parent.getCurrentUser(true)
        this.grids[0].value = parseFloat(this.user.balance).toFixed(2)
        this.grids[1].value = this.user.points
        this.grids[2].value = 0
        this.$apply()
      } else {
        try {
          let authResponse = await api.login()

          // 登录成功返回上一页
          if (authResponse.statusCode === 201) {
            // wepy.navigateBack()
          } else {
            wx.navigateTo({
              url: '/pages/auth/authorization'
            })
          }
        } catch (err) {
          wepy.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
          })
        }
      }
    }
  }
</script>
