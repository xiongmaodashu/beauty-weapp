<style lang="less">
.input-box{
  display: flex;
  justify-content: space-around;
  width:100%;
}
.input-box input{
  height: 94rpx;
  width:94rpx;
  border:1px solid #cdcdcd;
  border-radius: 8rpx;
  display: inline-block;
  line-height: 94px;
  text-align: center;
  font-size: 48rpx;
  color:#323232;
  margin:0 8rpx;
}
.hidden_input{
  height: 0rpx;
  width:0rpx;
  border:none;
  margin:0;
}
.verification-code {
    margin-top:30px;
}
.verification-alert {
    padding: 10px;
    text-align: center;
    font-size: 0.75rem;
    color: #aaaaaa;
}
.submit-btn {
    width: 75%;
    height: 48px;
    line-height: 48px;;
    margin: 10px auto;
    text-align: center;
    border-radius: 5px;
    background: #ea889f;
    color: #ffffff;
}
.cd-time {
    color: #b1b1b1;
    font-size: 0.7rem;
}
.send-btn {
    width: 85px;
}
.error-message {
    color: #E64340;
}
</style>

<template>
    <view class="page">
        <view class="weui-toptips weui-toptips_warn" wx:if="{{ errors.phone[0] }}">{{ errors.phone[0] }}</view>
        <view class="weui-toptips weui-toptips_warn" wx:if="{{ verificationCodeError }}">{{ verificationCodeError }}</view>
        <view class="page__hd">
            <view class="page__title">绑定手机号</view>
            <view class="page__desc">请输入手机号，获取验证码完成绑定。</view>
        </view>
        <view class="page__bd">
            <view class="weui-cells weui-cells_after-title">
                <view class="weui-cell weui-cell_input weui-cell_vcode">
                    <view class="weui-cell__hd">
                        <view class="weui-label">手机号</view>
                    </view>
                    <view class="weui-cell__bd">
                        <input class="weui-input" placeholder="请输入手机号" @input="getPhoneNumber" />
                    </view>
                    <view class="weui-cell__ft" wx:if="{{ errors.phone[0] }}">
                        <icon type="warn" size="23" color="#E64340"></icon>
                    </view>
                    <view class="weui-cell__ft">
                        <view class="weui-vcode-btn send-btn" wx:if="{{!cdTime}}" @tap="sendVerificationCode">获取验证码</view>
                        <view class="weui-vcode-btn send-btn cd-time" wx:else>{{cdTime}}s后重新获取</view>
                    </view>
                </view>
            </view>
            <view class="verification-code" wx:if="{{isSend}}">
                <view class="verification-alert">
                    验证码已发送至手机，请您尽快完成验证。
                </view>
                <view class='input-box'>
                    <input type='number' wx:for="{{inputLen}}" wx:key="{{index}}" 
                    disabled bindtap='onFocus'
                    value="{{inputVerificationCode.length>=index+1?inputVerificationCode[index]:''}}" />
                </view>
                <input class='hidden_input' maxlength="{{inputLen}}" 
                focus="{{isFocus}}" bindinput="setValue" value="{{inputCode}}" />
                <button class="submit-btn" @tap="bind">提交</button>
                
            </view>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy'
import api from '@/utils/api'

export default class UsersPhone extends wepy.page {
    data = {
    inputLen: 6,
    inputVerificationCode: "",
    inputCode: "",
    isFocus: false,
    isSend: false,
    cdTime: 0,
    cdTimer: null,
    phoneNumber: null,
    verificationCode: null,
    errors: null,
    verificationCodeError: null,
  }

  
  methods = {
      onFocus (e){
        this.setData({isFocus:true});
      },
      setValue (e){
        this.inputVerificationCode = this.inputCode = e.detail.value
      },
      getPhoneNumber(e) {
          this.phoneNumber = e.detail.value
      },
      async sendVerificationCode() {
        this.isFocus = false
        try {
            let verificationCodeResponse = await api.authRequest({
                url: 'verificationCodes',
                method: 'POST',
                data: {
                    phone: this.phoneNumber
                }
            })
            if (verificationCodeResponse.statusCode === 422) {
                this.errors = verificationCodeResponse.data.errors
                this.$apply()
            }
            if (verificationCodeResponse.statusCode === 201) {
                this.verificationCode = verificationCodeResponse.data
                this.cdTime = 60
                this.inputVerificationCode = this.inputCode = "",
                this.errors = this.verificationCodeError = null
                this.isSend = this.isFocus = true
                let _this = this
                if (_this.cdTimer) {
                    clearInterval(_this.cdTimer)
                }
                _this.cdTimer = setInterval(function () {
                    if(_this.cdTime > 0) {
                        _this.cdTime--
                        _this.$apply()
                    }
                },1000)
            }
        } catch (err) {
            console.log(err)
            wepy.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
            })
        }
      },
      async bind() {
          if (this.inputVerificationCode.length < 6) {
              this.verificationCodeError = '请输入有效的验证码'
              this.$apply()
              return false
          }
          if (new Date().getTime() > new Date(this.verificationCode.expiredAt).getTime()) {
            this.verificationCodeError = '验证码已失效，请重新获取'
            this.$apply()
            return false
          }
          try {
            let bindPhoneResponse = await api.authRequest({
                url: 'user/bind_phone',
                method: 'PUT',
                data: {
                    verification_key: this.verificationCode.key,
                    verification_code: this.inputVerificationCode
                }
            })
            if (bindPhoneResponse.statusCode === 403 || bindPhoneResponse.statusCode === 401) {
                this.verificationCodeError = bindPhoneResponse.data.message
                this.$apply()
                return false
            }
            if (bindPhoneResponse.statusCode === 201) {
                wepy.showToast({
                    title: '绑定成功',
                    icon: 'success',
                    duration: 1500
                })
                let _this = this
                setTimeout(function(){
                    _this.getCurrentUser()
                    let pages = getCurrentPages()
                    let prevPage = pages[ pages.length - 2 ]
                    prevPage.setData({
                        phone: _this.phoneNumber
                    })
                    wepy.navigateBack()
                }, 1500)
            }
          } catch (err) {
              console.log(err)
              wepy.showModal({
                title: '提示',
                content: '服务器错误，请联系管理员'
            })
          }
     }
  }
  async getCurrentUser () {
    try {
      let userResponse = await api.authRequest('user')
        if (userResponse.statusCode === 200) {
          let user = userResponse.data
          wepy.setStorageSync('user', user)
        }
    } catch (err) {
      console.log(err)
      wepy.showModal({
        title: '提示',
        content: '服务器错误，请联系管理员'
      })
    }
  }
  onLoad() {
      
  }
}
</script>

