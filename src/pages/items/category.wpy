<style lang="less">
.weui-navbar__item.weui-bar__item_on {
    color: #ea889f;
}
.category-item-box {
    display: block;
    width: 700rpx;
    height: 350rpx;
    margin: 40rpx auto;
    overflow: hidden;
    box-shadow: 1px 1px 8px rgba(234,136,159, 0.3);
}
.category-item-box image {
    width: 700rpx;
    height: 350rpx;
}
</style>

<template>
    <view class="page__bd">
        <view class="weui-search-bar">
            <view class="weui-search-bar__form">
                <view class="weui-search-bar__box">
                    <icon class="weui-icon-search_in-box" type="search" size="14"></icon>
                    <input type="text" class="weui-search-bar__input" placeholder="搜索" value="{{inputVal}}" focus="{{inputShowed}}" bindinput="inputTyping" />
                    <view class="weui-icon-clear" wx:if="{{inputVal.length > 0}}" bindtap="clearInput">
                        <icon type="clear" size="14"></icon>
                    </view>
                </view>
                <label class="weui-search-bar__label" hidden="{{inputShowed}}" bindtap="showInput">
                    <icon class="weui-icon-search" type="search" size="14"></icon>
                    <view class="weui-search-bar__text">搜索</view>
                </label>
            </view>
            <view class="weui-search-bar__cancel-btn" hidden="{{!inputShowed}}" bindtap="hideInput">取消</view>
        </view>
        <view class="weui-tab" wx:if="{{!isSearch}}">
            <view class="weui-navbar">
                <view wx:for="{{tabs}}" wx:key="*this" id="{{index}}" class="weui-navbar__item {{activeIndex == index ? 'weui-bar__item_on' : ''}}" @tap="tabClick">
                    <view class="weui-navbar__title">{{item}}</view>
                </view>
            </view>
            <view class="weui-tab__panel">
                <view class="weui-tab__content" hidden="{{activeIndex != 0}}">
                    <repeat for="{{items}}" item="item">
                        <navigator class="category-item-box" url="/pages/items/show?id={{ item.id }}">
                            <image src="{{item.thumbnail}}" mode="widthFix" style="width:720rpx;" />
                        </navigator>
                    </repeat>
                </view>
                <view class="weui-tab__content" hidden="{{activeIndex != 1}}">
                    <repeat for="{{items}}" item="item">
                        <navigator class="category-item-box" url="/pages/items/show?id={{ item.id }}">
                            <image src="{{item.thumbnail}}" mode="widthFix" style="width:720rpx;" />
                        </navigator>
                    </repeat>
                </view>
                <view class="weui-tab__content" hidden="{{activeIndex != 2}}">
                    <repeat for="{{items}}" item="item">
                        <navigator class="category-item-box" url="/pages/items/show?id={{ item.id }}">
                            <image src="{{item.thumbnail}}" mode="widthFix" style="width:720rpx;" />
                        </navigator>
                    </repeat>
                </view>
            </view>
        </view>
        <view class="search-result" wx:else>
            <repeat for="{{searchItems}}" item="item">
                <navigator class="category-item-box" url="/pages/items/show?id={{ item.id }}">
                    <image src="{{item.thumbnail}}" mode="widthFix" style="width:720rpx;" />
                </navigator>
            </repeat>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy'
import api from '@/utils/api'

export default class ItemCategory extends wepy.page {
    data = {
        inputShowed: false,
        inputVal: '',
        tabs: ['热门', '美体', '美颜'],
        activeIndex: 0,
        items: [],
        categoryId: null,
        badge: 2,
        isSearch: false,
        searchItems: [],
    }

    async getItems() {
        let params = {}
        if (this.categoryId) {
            params.item_category_id = this.categoryId
        }
        if (this.badge) {
            params.badge = this.badge
        }
        try {
            let ItemsResponse = await api.request({
                url: 'items/category',
                data: params
            })
            let items = ItemsResponse.data.data
            this.items = items
            this.$apply()
        } catch (err) {
            console.log(err)
            wepy.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
            })
        }
    }

    async search(keyword) {
        try {
            let searchResponse = await api.request({
                url: 'items/search',
                data: {
                    keyword: keyword
                }
            })
            let searchItems = searchResponse.data.data
            this.searchItems = searchItems
            this.$apply()
        } catch (err) {
            console.log(err)
            wepy.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
            })
        }
    }

    methods = {
        showInput () {
          this.inputShowed = true
          this.isSearch = true
        },
        hideInput () {
          this.inputVal = ''
          this.inputShowed = false
          this.isSearch = false
          this.searchItems = []
        },
        clearInput () {
          this.inputVal = ''
          this.searchItems = []
        },
        inputTyping (e) {
            if (e.detail.cursor == e.detail.value.length) {
                this.inputVal = e.detail.value
                this.search(this.inputVal)
            }
        },
        tabClick (e) {
            this.sliderOffset = e.currentTarget.offsetLeft;
            this.activeIndex = e.currentTarget.id;
            this.items = []
            switch (this.activeIndex) {
                case '0':
                    this.categoryId = null
                    this.badge = 2
                    this.getItems()
                    break
                case '1':
                    this.categoryId = 2
                    this.badge = null
                    this.getItems()
                    break
                case '2':
                    this.categoryId = 3
                    this.badge = null
                    this.getItems()
                    break
            }
        }
    }
    onLoad() {
        this.getItems()
    }
}
</script>

