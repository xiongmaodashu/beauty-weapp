<style lang="less">
.weui-cells::before, .weui-cells::after {
    border: none;
}

.order-items {
    width: 90%;
    background: #ffffff;
    margin: 0 auto;
}
.orderable_date {
    width:100px;
    height:70px;
    line-height: 35px;
    border: 1px solid #ea889f;
    border-radius: 5px;
    margin: 0 3px;
    padding:0 8px;
    display: inline-block;
}
.orderable_date.active {
    background: #ea889f;
    color: #f7f6f3;
}
.orderable_date view {
    text-align: center;
}
.orderable_time {
    width:25%;
    height: 100rpx;
    padding:0 5rpx;
    margin-bottom:30rpx;
    display: inline-block;
    box-sizing: border-box;
}
.orderable_time .active {
    background: #ea889f;
    color: #f7f6f3;
}
.orderable_time .disabled {
    background: #aaaaaa;
}
.orderable_time>view {
    padding: 10rpx;
    border: 1px solid #ea889f;
    border-radius: 5px;
    text-align: center;
}
.order_counts {
    letter-spacing: 2rpx;
}
.error-message {
    color: #E64340;
}
.next-btn {
    display: block;
    width:100%;
    height: 50px;
    line-height: 50px;
    background: #ea889f;
    color: #f7f6f3;
    text-align: center;
    margin-top: 20px; 
}
.weui-textarea {
    background: #ffffff;
    padding: 20rpx;
    box-sizing: border-box;
    height: 200rpx;
}
</style>

<template>
<view class="page">
    <viem class="order-items">
        <view class="weui-cells__title">预约项目
            <text wx:if="{{ errors.item_id }}" class="weui-cells__tips error-message">{{ errors.item_id }}</text>
        </view>
        <view class="weui-cells weui-cells_after-title">
            <view class="weui-cell__hd">
                <picker @change="chooseItem" value="{{itemIndex}}" range="{{orderableItems}}" range-key="name">
                    <view class="weui-select">{{orderableItems[itemIndex].name}}</view>
                </picker>
            </view>
        </view>
    </viem>
    <view class="weui-cells__title">预约日期
        <text wx:if="{{ errors.order_date }}" class="weui-cells__tips error-message">{{ errors.order_date }}</text>
    </view>
    
    <view class="weui-cells weui-cells_after-title">
        <scroll-view scroll-x style="width:100%;white-space: nowrap;overflow:hidden" >
            <repeat for="{{ orderableDate }}" key="id" index="index" item="date">
                <view class="orderable_date {{ dateIndex == index?'active':'' }}" data-index="{{ index }}" data-text="{{ date.date }}" bindtap="chooseDate">
                    <view>{{ date.date }}</view>
                    <view>{{ date.day }}</view>
                </view>
            </repeat>
        </scroll-view>
    </view>
    

    <view class="weui-cells__title">预约时间
        <text wx:if="{{ errors.order_time }}" class="weui-cells__tips error-message">{{ errors.order_time }}</text>
    </view>
    <view class="weui-cells weui-cells_after-title">
        <repeat for="{{ orderableTime.order_time }}" key="id" index="index" item="orderTime">
            <view class="orderable_time" data-index="{{index}}" data-passed="{{ orderTime.passed }}" data-text="{{ orderTime.time }}" bindtap="chooseTime">
                <view class="{{ timeIndex == index?'active':'' }}{{ orderTime.passed ?'disabled':''}}">
                    <view class="order_times">{{ orderTime.time }}</view>
                    <view class="order_counts">{{ orderTime.count }}/{{ orderableTime.max_number }}</view>
                </view>
            </view>
        </repeat>
    </view>

    <view class="weui-cells__title">备注信息</view>
    <view class="weui-cells weui-cells_after-title">
        <view class="weui-cell">
            <view class="weui-cell__bd">
                <textarea class="weui-textarea" placeholder="请输入备注信息" @input="inputRemark" />
            </view>
        </view>
    </view>
 
    <button class="next-btn"  @tap="nextStep">下一步</button>
</view>
</template>

<script>
import wepy from 'wepy'
import api from '@/utils/api'
import util from '@/utils/util'

export default class OrdersCreate extends wepy.page {
  config = {
    navigationBarTitleText: '项目预约'
}

  data = {
    user: null,
    shop_id: null,
    item_id: null,
    orderableItems: null,
    itemIndex: 0,
    orderableDate: null,
    orderableTime: null,
    orderDate: util.today(new Date()),
    orderTime: null,
    dateIndex: 0,
    timeIndex: null,
    remark: '',
    errors: {}
}

    async getOrderableItems(shop_id, item_id = null) {
        try {
            let orderableItemsResponse = await api.request({
                url: 'orders/order_items?shop_id=' + shop_id
            })
            let orderableItems = orderableItemsResponse.data.items
            this.orderableItems = orderableItems
            if (item_id) {
                this.item_id = item_id
                let _this = this
                this.orderableItems.forEach(function(item, index) {
                    if (item.id == item_id) {
                        _this.itemIndex = index
                    }
                })
            } else {
                this.item_id = this.orderableItems[0].id
            }
            this.getOrderableDate(this.item_id, this.shop_id)
            this.getOrderableTime(this.item_id, this.shop_id, this.orderDate)
            this.$apply()
        } catch (err) {
            console.log(err)
            wepy.showModal({
                title: '提示',
                content: '服务器错误，请联系管理员'
            })
        }
    }

    async getOrderableDate(item_id, shop_id) {
        try {
            let orderableDateResponse = await api.request({
                url: 'orders/order_date?item_id=' + item_id + '&shop_id=' + shop_id,
            })
            let orderableDate = orderableDateResponse.data
            this.orderableDate = orderableDate
            this.$apply()
        } catch (err) {
            console.log(err)
            wepy.showModal({
                title: '提示',
                content: '服务器错误，请联系管理员'
            })
        }
    }
    async getOrderableTime(item_id, shop_id, order_date) {
        try {
            let orderableTimeResponse = await api.request({
                url: 'orders/order_time?item_id=' + item_id + '&shop_id=' + shop_id + '&order_date=' + order_date,
            })
            let orderableTime = orderableTimeResponse.data
            this.orderableTime = orderableTime
            this.$apply()
        } catch (err) {
            console.log(err)
            wepy.showModal({
                title: '提示',
                content: '服务器错误，请联系管理员'
            })
        }
    }
    methods = {
        chooseItem(e) {
            this.itemIndex = e.detail.value
            this.item_id = this.orderableItems[this.itemIndex].id
            this.getOrderableDate(this.item_id, this.shop_id)
            this.getOrderableTime(this.item_id, this.shop_id, this.orderDate)
            this.timeIndex = null
        },
        chooseDate(e) {
            this.getOrderableTime(this.item_id, this.shop_id, e.currentTarget.dataset.text)
            this.dateIndex = e.currentTarget.dataset.index
            this.orderDate = e.currentTarget.dataset.text
            this.timeIndex = null
            this.errors = {}
        },
        chooseTime(e) {
            if (e.currentTarget.dataset.passed) {
                return false
            }
            this.timeIndex = e.currentTarget.dataset.index
            this.orderTime = e.currentTarget.dataset.text
            this.errors = {}
            
        },
        inputRemark(e) {
            this.remark = e.detail.value
        },
        async nextStep() {
            if (this.orderTime === null) {
                this.errors.order_time = '请选择预约时间'
                return false
            }
            if (this.orderDate === null) {
                this.errors.order_date = '请选择预约日期'
                return false
            }

            wx.navigateTo({
                url: "/pages/orders/confirm?shop_id="+this.shop_id+"&item_id="+this.item_id+
                "&order_date="+this.orderDate+"&order_time="+this.orderTime+"&remark="+this.remark
            })
        }
    }

    onLoad(options) {
        this.shop_id = options.shop_id
        if (options.item_id) {
            this.getOrderableItems(options.shop_id, options.item_id)
        } else {
            this.getOrderableItems(options.shop_id)
            
        }
    }
    
    async onShow() {
        let accessToken = wepy.getStorageSync('access_token')

        if (accessToken) {
            this.user = await this.$parent.getCurrentUser()
            this.$apply()
        } else {
            try {
                let authResponse = await api.login()

                // 登录成功返回上一页
                if (authResponse.statusCode === 201) {
                    // wepy.navigateBack()
                } else {
                    wx.navigateTo({
                    url: '/pages/auth/authorization'
                    })
                }
            } catch (err) {
                wepy.showModal({
                    title: '提示',
                    content: '服务器错误，请联系管理员'
                })
            }
        }
        
    }
}
</script>
